#!/bin/bash
# Script de menu interativo para acessar sess√µes tmux via Termius
# Compat√≠vel com o workflow que voc√™ j√° usa

echo "üéØ MENU DE SESS√ïES TMUX - CLAUDE CODE"
echo "====================================="

# Fun√ß√£o para mostrar sess√µes dispon√≠veis
show_sessions() {
    echo ""
    echo "üìã Sess√µes Dispon√≠veis:"
    tmux list-sessions 2>/dev/null | nl -w2 -s') '
    echo ""
}

# Fun√ß√£o para mostrar janelas de uma sess√£o
show_windows() {
    local session_name="$1"
    echo ""
    echo "ü™ü Janelas da sess√£o '$session_name':"
    tmux list-windows -t "$session_name" 2>/dev/null | nl -w2 -s') '
    echo ""
}

# Menu principal
main_menu() {
    while true; do
        clear
        echo "üéØ MENU DE SESS√ïES TMUX - CLAUDE CODE"
        echo "====================================="
        
        # Mostrar sess√µes
        show_sessions
        
        echo "Op√ß√µes:"
        echo "p) Listar e escolher sess√£o (como voc√™ faz normalmente)"
        echo "c) Ir direto para claude-code"
        echo "r) Ir para cresol-portal-acesso"
        echo "w) Mostrar janelas de uma sess√£o"
        echo "n) Criar nova sess√£o"
        echo "q) Sair"
        echo ""
        
        read -p "Digite sua escolha (p/c/r/w/n/q): " choice
        
        case $choice in
            p|P)
                echo ""
                echo "üìã Escolha a sess√£o pelo n√∫mero:"
                sessions=($(tmux list-sessions -F '#{session_name}' 2>/dev/null))
                
                if [ ${#sessions[@]} -eq 0 ]; then
                    echo "‚ùå Nenhuma sess√£o encontrada!"
                    read -p "Pressione Enter para continuar..."
                    continue
                fi
                
                for i in "${!sessions[@]}"; do
                    echo "$((i+1))) ${sessions[i]}"
                done
                echo ""
                
                read -p "Digite o n√∫mero da sess√£o: " session_num
                
                if [[ "$session_num" =~ ^[0-9]+$ ]] && [ "$session_num" -ge 1 ] && [ "$session_num" -le "${#sessions[@]}" ]; then
                    selected_session="${sessions[$((session_num-1))]}"
                    echo "üöÄ Conectando √† sess√£o: $selected_session"
                    tmux attach-session -t "$selected_session"
                    exit 0
                else
                    echo "‚ùå N√∫mero inv√°lido!"
                    read -p "Pressione Enter para continuar..."
                fi
                ;;
                
            c|C)
                echo "üöÄ Conectando √† sess√£o claude-code..."
                if tmux has-session -t claude-code 2>/dev/null; then
                    tmux attach-session -t claude-code
                    exit 0
                else
                    echo "‚ùå Sess√£o claude-code n√£o encontrada!"
                    read -p "Pressione Enter para continuar..."
                fi
                ;;
                
            r|R)
                echo "üöÄ Conectando √† sess√£o cresol-portal..."
                if tmux has-session -t claude-code 2>/dev/null; then
                    tmux attach-session -t claude-code:cresol-portal
                    exit 0
                else
                    echo "‚ùå Sess√£o n√£o encontrada!"
                    read -p "Pressione Enter para continuar..."
                fi
                ;;
                
            w|W)
                echo ""
                read -p "Digite o nome da sess√£o para ver janelas: " session_name
                if tmux has-session -t "$session_name" 2>/dev/null; then
                    show_windows "$session_name"
                    echo "Para conectar a uma janela espec√≠fica:"
                    echo "tmux attach -t $session_name:NOME_DA_JANELA"
                else
                    echo "‚ùå Sess√£o '$session_name' n√£o encontrada!"
                fi
                read -p "Pressione Enter para continuar..."
                ;;
                
            n|N)
                echo ""
                read -p "Nome da nova sess√£o: " new_session
                read -p "Diret√≥rio inicial (Enter para atual): " start_dir
                
                if [ -z "$start_dir" ]; then
                    start_dir="$(pwd)"
                fi
                
                echo "üöÄ Criando sess√£o '$new_session' em '$start_dir'..."
                tmux new-session -d -s "$new_session" -c "$start_dir"
                echo "‚úÖ Sess√£o criada! Conectando..."
                tmux attach-session -t "$new_session"
                exit 0
                ;;
                
            q|Q)
                echo "üëã Saindo..."
                exit 0
                ;;
                
            *)
                echo "‚ùå Op√ß√£o inv√°lida!"
                read -p "Pressione Enter para continuar..."
                ;;
        esac
    done
}

# Verificar se tmux est√° instalado
if ! command -v tmux &> /dev/null; then
    echo "‚ùå tmux n√£o est√° instalado!"
    exit 1
fi

# Executar menu principal
main_menu
